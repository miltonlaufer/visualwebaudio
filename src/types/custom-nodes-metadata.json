{
  "ButtonNode": {
    "name": "Button",
    "description": "A button that triggers an action",
    "category": "control",
    "inputs": [],
    "outputs": [
      {
        "name": "trigger",
        "type": "control",
        "description": "Triggers when button is clicked"
      }
    ],
    "properties": [
      {
        "name": "label",
        "type": "string",
        "defaultValue": "Click Me",
        "description": "Button label text"
      }
    ],
    "methods": [],
    "events": []
  },
  "SliderNode": {
    "name": "Slider",
    "description": "A slider control for adjusting values",
    "category": "control",
    "inputs": [
      {
        "name": "min",
        "type": "control",
        "description": "Minimum value"
      },
      {
        "name": "max",
        "type": "control",
        "description": "Maximum value"
      },
      {
        "name": "step",
        "type": "control",
        "description": "Step size"
      }
    ],
    "outputs": [
      {
        "name": "value",
        "type": "control",
        "description": "Current slider value"
      }
    ],
    "properties": [
      {
        "name": "value",
        "type": "number",
        "defaultValue": 0,
        "min": 0,
        "max": 100,
        "step": 1,
        "description": "Current value of the slider"
      },
      {
        "name": "min",
        "type": "number",
        "defaultValue": 0,
        "description": "Minimum value"
      },
      {
        "name": "max",
        "type": "number",
        "defaultValue": 100,
        "description": "Maximum value"
      },
      {
        "name": "step",
        "type": "number",
        "defaultValue": 1,
        "description": "Step size"
      },
      {
        "name": "label",
        "type": "string",
        "defaultValue": "Slider",
        "description": "Label text displayed above the slider"
      }
    ],
    "methods": [],
    "events": []
  },
  "GreaterThanNode": {
    "name": "Greater Than",
    "description": "Outputs 1 if first input is greater than second input, 0 otherwise. Logic conditional node.",
    "category": "logic",
    "inputs": [
      {
        "name": "input1",
        "type": "control"
      },
      {
        "name": "input2",
        "type": "control"
      }
    ],
    "outputs": [
      {
        "name": "result",
        "type": "control"
      }
    ],
    "properties": [
      {
        "name": "threshold",
        "type": "number",
        "defaultValue": 0
      }
    ],
    "methods": [],
    "events": []
  },
  "EqualsNode": {
    "name": "Equals",
    "description": "Outputs 1 if inputs are equal, 0 otherwise. Comparison conditional node.",
    "category": "logic",
    "inputs": [
      {
        "name": "input1",
        "type": "control"
      },
      {
        "name": "input2",
        "type": "control"
      }
    ],
    "outputs": [
      {
        "name": "result",
        "type": "control"
      }
    ],
    "properties": [
      {
        "name": "tolerance",
        "type": "number",
        "defaultValue": 0.001
      }
    ],
    "methods": [],
    "events": []
  },
  "SelectNode": {
    "name": "Select",
    "description": "Routes input to one of multiple outputs based on selector value. Similar to Max/MSP select object.",
    "category": "logic",
    "inputs": [
      {
        "name": "selector",
        "type": "control"
      },
      {
        "name": "input",
        "type": "control"
      }
    ],
    "outputs": [
      {
        "name": "output0",
        "type": "control"
      },
      {
        "name": "output1",
        "type": "control"
      },
      {
        "name": "output2",
        "type": "control"
      },
      {
        "name": "output3",
        "type": "control"
      }
    ],
    "properties": [
      {
        "name": "numOutputs",
        "type": "number",
        "defaultValue": 2,
        "min": 2,
        "max": 8
      }
    ],
    "methods": [],
    "events": []
  },
  "MidiInputNode": {
    "name": "MIDI Input",
    "description": "Receives MIDI messages from connected MIDI devices. Outputs note, velocity, and control change data.",
    "category": "input",
    "inputs": [],
    "outputs": [
      {
        "name": "note",
        "type": "control"
      },
      {
        "name": "velocity",
        "type": "control"
      },
      {
        "name": "cc",
        "type": "control"
      },
      {
        "name": "pitch",
        "type": "control"
      }
    ],
    "properties": [
      {
        "name": "channel",
        "type": "number",
        "defaultValue": 1,
        "min": 1,
        "max": 16
      },
      {
        "name": "deviceName",
        "type": "string",
        "defaultValue": ""
      }
    ],
    "methods": [],
    "events": []
  },
  "MidiToFreqNode": {
    "name": "MIDI to Frequency",
    "description": "Converts MIDI note numbers to frequency values",
    "category": "misc",
    "inputs": [
      {
        "name": "midiNote",
        "type": "control",
        "description": "MIDI note number (0-127)"
      }
    ],
    "outputs": [
      {
        "name": "frequency",
        "type": "control",
        "description": "Frequency in Hz corresponding to the MIDI note"
      }
    ],
    "properties": [
      {
        "name": "midiNote",
        "type": "number",
        "defaultValue": 60,
        "min": 0,
        "max": 127,
        "step": 1,
        "description": "MIDI note number (60 = middle C)"
      },
      {
        "name": "frequency",
        "type": "number",
        "defaultValue": 261.63,
        "description": "Corresponding frequency in Hz"
      }
    ],
    "methods": [],
    "events": []
  },
  "SoundFileNode": {
    "name": "Sound File",
    "description": "Loads and plays audio files",
    "category": "control",
    "inputs": [
      {
        "name": "trigger",
        "type": "control",
        "description": "Triggers playback of the loaded audio file"
      }
    ],
    "outputs": [
      {
        "name": "output",
        "type": "audio",
        "description": "Audio output from the loaded file"
      }
    ],
    "properties": [
      {
        "name": "fileName",
        "type": "string",
        "defaultValue": "",
        "description": "Name of the loaded audio file"
      },
      {
        "name": "duration",
        "type": "number",
        "defaultValue": 0,
        "description": "Duration of the loaded audio file in seconds"
      }
    ],
    "methods": [],
    "events": []
  },
  "DisplayNode": {
    "name": "Display",
    "description": "Displays numeric values and waveforms",
    "category": "misc",
    "inputs": [
      {
        "name": "input",
        "type": "control",
        "description": "Value to display"
      }
    ],
    "outputs": [
      {
        "name": "output",
        "type": "control",
        "description": "Pass-through of input value"
      }
    ],
    "properties": [
      {
        "name": "value",
        "type": "number",
        "defaultValue": 0,
        "description": "Current displayed value"
      },
      {
        "name": "precision",
        "type": "number",
        "defaultValue": 2,
        "min": 0,
        "max": 6,
        "description": "Number of decimal places to display"
      },
      {
        "name": "label",
        "type": "string",
        "defaultValue": "Display",
        "description": "Label text displayed above the value"
      }
    ],
    "methods": [],
    "events": []
  },
  "RandomNode": {
    "name": "Random",
    "description": "Generates random values at a specified rate",
    "category": "misc",
    "inputs": [
      {
        "name": "rate",
        "type": "control",
        "description": "Rate of random value generation in Hz"
      }
    ],
    "outputs": [
      {
        "name": "value",
        "type": "control",
        "description": "Random value between 0 and 1"
      }
    ],
    "properties": [
      {
        "name": "rate",
        "type": "number",
        "defaultValue": 1,
        "min": 0.1,
        "max": 10,
        "step": 0.1,
        "description": "Rate of random value generation in Hz"
      },
      {
        "name": "value",
        "type": "number",
        "defaultValue": 0,
        "description": "Current random value"
      }
    ],
    "methods": [],
    "events": []
  },
  "TimerNode": {
    "name": "Timer",
    "description": "Triggers events automatically at specified intervals. Can operate in one-shot or loop mode with configurable timing.",
    "category": "control",
    "inputs": [
      {
        "name": "trigger",
        "type": "control",
        "description": "Manual trigger input - starts the timer when start mode is 'manual'"
      },
      {
        "name": "reset",
        "type": "control",
        "description": "Resets the timer and stops any running intervals"
      }
    ],
    "outputs": [
      {
        "name": "trigger",
        "type": "control",
        "description": "Outputs a trigger pulse when timer fires"
      },
      {
        "name": "count",
        "type": "control",
        "description": "Number of times the timer has triggered"
      }
    ],
    "properties": [
      {
        "name": "mode",
        "type": "string",
        "defaultValue": "loop",
        "options": ["oneshot", "loop"],
        "description": "Timer mode: 'oneshot' fires once, 'loop' fires repeatedly"
      },
      {
        "name": "delay",
        "type": "number",
        "defaultValue": 1000,
        "min": 10,
        "max": 60000,
        "step": 10,
        "description": "Initial delay before first trigger (milliseconds)"
      },
      {
        "name": "interval",
        "type": "number",
        "defaultValue": 1000,
        "min": 10,
        "max": 60000,
        "step": 10,
        "description": "Interval between triggers in loop mode (milliseconds)"
      },
      {
        "name": "startMode",
        "type": "string",
        "defaultValue": "auto",
        "options": ["auto", "manual"],
        "description": "Start mode: 'auto' starts when audio context starts, 'manual' waits for trigger input"
      },
      {
        "name": "enabled",
        "type": "string",
        "defaultValue": "true",
        "options": ["true", "false"],
        "description": "Whether the timer is enabled"
      },
      {
        "name": "count",
        "type": "number",
        "defaultValue": 0,
        "description": "Number of times the timer has triggered"
      }
    ],
    "methods": [],
    "events": []
  }
}
